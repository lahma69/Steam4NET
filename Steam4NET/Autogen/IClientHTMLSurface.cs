// This file is automatically generated.
using System;
using System.Text;
using System.Runtime.InteropServices;
using Steam4NET.Attributes;

namespace Steam4NET
{

	[StructLayout(LayoutKind.Sequential,Pack=8)]
	public struct CValidator
	{
		public Int32 m_iPadding;
	};
	
	[InterfaceVersion("CLIENTHTMLSURFACE_INTERFACE_VERSION_000")]
	public interface IClientHTMLSurface
	{
		[VTableSlot(0)]
		void __virtualDestructorForCSteamHTMLSurface();
		[VTableSlot(1)]
		bool Init();
		[VTableSlot(2)]
		bool Shutdown();
		[VTableSlot(3)]
		UInt64 CreateBrowser(string pchUserAgent, string pchUserCSS);
		[VTableSlot(4)]
		void RemoveBrowser(UInt32 hBrowser);
		[VTableSlot(5)]
		void AllowStartRequest(UInt32 hBrowser, bool allowed);
		[VTableSlot(6)]
		void LoadURL(UInt32 hBrowser, string pchURL, string pchPostData);
		[VTableSlot(7)]
		void SetSize(UInt32 hBrowser, UInt32 width, UInt32 height);
		[VTableSlot(8)]
		void StopLoad(UInt32 hBrowser);
		[VTableSlot(9)]
		void Reload(UInt32 hBrowser);
		[VTableSlot(10)]
		void GoBack(UInt32 hBrowser);
		[VTableSlot(11)]
		void GoForward(UInt32 hBrowser);
		[VTableSlot(12)]
		void AddHeader(UInt32 hBrowser, string pchKey, string pchValue);
		[VTableSlot(13)]
		void ExecuteJavascript(UInt32 hBrowser, string pchJs);
		[VTableSlot(14)]
		void MouseUp(UInt32 hBrowser, EHTMLMouseButton eMButton);
		[VTableSlot(15)]
		void MouseDown(UInt32 hBrowser, EHTMLMouseButton eMButton);
		[VTableSlot(16)]
		void MouseDoubleClick(UInt32 hBrowser, EHTMLMouseButton eMButton);
		[VTableSlot(17)]
		void MouseMove(UInt32 hBrowser, Int32 x, Int32 y);
		[VTableSlot(18)]
		void MouseWheel(UInt32 hBrowser, Int32 delta);
		[VTableSlot(19)]
		void KeyDown(UInt32 hBrowser, UInt32 key, EHTMLKeyModifiers eKeyMod);
		[VTableSlot(20)]
		void KeyUp(UInt32 hBrowser, UInt32 key, EHTMLKeyModifiers eKeyMod);
		[VTableSlot(21)]
		void KeyChar(UInt32 hBrowser, UInt32 key, EHTMLKeyModifiers eKeyMod);
		[VTableSlot(22)]
		void SetHorizontalScroll(UInt32 hBrowser, UInt32 nAbsScrollPx);
		[VTableSlot(23)]
		void SetVerticalScroll(UInt32 hBrowser, UInt32 nAbsScrollPx);
		[VTableSlot(24)]
		void SetKeyFocus(UInt32 hBrowser, bool hasFocus);
		[VTableSlot(25)]
		void ViewSource(UInt32 hBrowser);
		[VTableSlot(26)]
		void CopyToClipboard(UInt32 hBrowser);
		[VTableSlot(27)]
		void PasteFromClipboard(UInt32 hBrowser);
		[VTableSlot(28)]
		void Find(UInt32 hBrowser, string search, bool currentlyInFind, bool reverse);
		[VTableSlot(29)]
		void StopFind(UInt32 hBrowser);
		[VTableSlot(30)]
		void GetLinkAtPosition(UInt32 hBrowser, Int32 x, Int32 y);
		[VTableSlot(31)]
		void JSDialogResponse(UInt32 hBrowser, bool result);
		[VTableSlot(32)]
		void FileLoadDialogResponse(UInt32 hBrowser, string selectedFiles);
		[VTableSlot(33)]
		void SetCookie(string pchHost, string pchKey, string pchValue, string pchPath, UInt32 expires, bool secure, bool HTTPOnly);
		[VTableSlot(34)]
		void SetPageScaleFactor(UInt32 hBrowser, float arg1, Int32 arg2, Int32 arg3);
		[VTableSlot(35)]
		void SetBackgroundMode(UInt32 hBrowser, bool backgroundMode);
		[VTableSlot(36)]
		void SetDPIScalingFactor(UInt32 hBrowser, float arg1);
		[VTableSlot(37)]
		void Validate(CValidator arg0, string arg1);
	};
}
